[0m[1mdata.archive_file.rgb_channel_separator: Reading...[0m[0m
[0m[1mdata.archive_file.thumbnail_generator: Reading...[0m[0m
[0m[1mdata.archive_file.input_handler: Reading...[0m[0m
[0m[1mdata.archive_file.exif_processor: Reading...[0m[0m
[0m[1mdata.archive_file.format_converter: Reading...[0m[0m
[0m[1mdata.archive_file.metadata_extractor: Reading...[0m[0m
[0m[1mdata.archive_file.thumbnail_generator: Read complete after 0s [id=935da9c72889bc3d29bcc5eb8c63bbcf42a18693][0m
[0m[1mdata.archive_file.format_converter: Read complete after 0s [id=f9902d6d6a305e7a4e7f8c0b083eee5a6045dca4][0m
[0m[1mdata.archive_file.rgb_channel_separator: Read complete after 0s [id=694a2e5d628f2af0cb40058d21f48328c4ca6567][0m
[0m[1mdata.archive_file.input_handler: Read complete after 0s [id=40ab62db073bfd507f1668d269127c622a9b1620][0m
[0m[1mdata.archive_file.exif_processor: Read complete after 0s [id=ebe1e0250666ff4671817a1fa28c66ba1fe2357b][0m
[0m[1mdata.archive_file.metadata_extractor: Read complete after 0s [id=8db3aa4f0e9b23910f05747499b3e2fae6aff1d6][0m
[0m[1mdata.google_project.project: Reading...[0m[0m
[0m[1mgoogle_pubsub_topic.convert_format: Refreshing state... [id=projects/serverless-project-24w/topics/convert-format][0m
[0m[1mgoogle_pubsub_topic.extract_metadata: Refreshing state... [id=projects/serverless-project-24w/topics/extract-metadata][0m
[0m[1mgoogle_storage_bucket.function_source_bucket: Refreshing state... [id=serverless-project-24w-functions][0m
[0m[1mgoogle_storage_bucket.output_bucket: Refreshing state... [id=serverless-project-24w-output][0m
[0m[1mgoogle_pubsub_topic.process_exif: Refreshing state... [id=projects/serverless-project-24w/topics/process-exif][0m
[0m[1mgoogle_pubsub_topic.generate_thumbnail: Refreshing state... [id=projects/serverless-project-24w/topics/generate-thumbnail][0m
[0m[1mgoogle_pubsub_topic.input_bucket: Refreshing state... [id=projects/serverless-project-24w/topics/input-bucket][0m
[0m[1mgoogle_storage_bucket.input_bucket: Refreshing state... [id=serverless-project-24w-input][0m
[0m[1mgoogle_pubsub_topic.separate_rgb_channels: Refreshing state... [id=projects/serverless-project-24w/topics/separate-rgb-channels][0m
[0m[1mdata.google_project.project: Read complete after 2s [id=projects/serverless-project-24w][0m
[0m[1mgoogle_project_iam_member.function_sa_roles["roles/cloudfunctions.invoker"]: Refreshing state... [id=serverless-project-24w/roles/cloudfunctions.invoker/serviceAccount:180156150843-compute@developer.gserviceaccount.com][0m
[0m[1mgoogle_project_iam_member.function_sa_roles["roles/pubsub.publisher"]: Refreshing state... [id=serverless-project-24w/roles/pubsub.publisher/serviceAccount:180156150843-compute@developer.gserviceaccount.com][0m
[0m[1mgoogle_project_iam_member.function_sa_roles["roles/eventarc.eventReceiver"]: Refreshing state... [id=serverless-project-24w/roles/eventarc.eventReceiver/serviceAccount:180156150843-compute@developer.gserviceaccount.com][0m
[0m[1mgoogle_project_iam_member.storage_publisher: Refreshing state... [id=serverless-project-24w/roles/pubsub.publisher/serviceAccount:service-180156150843@gs-project-accounts.iam.gserviceaccount.com][0m
[0m[1mgoogle_project_iam_member.function_sa_roles["roles/storage.objectViewer"]: Refreshing state... [id=serverless-project-24w/roles/storage.objectViewer/serviceAccount:180156150843-compute@developer.gserviceaccount.com][0m
[0m[1mgoogle_project_iam_member.function_sa_roles["roles/pubsub.editor"]: Refreshing state... [id=serverless-project-24w/roles/pubsub.editor/serviceAccount:180156150843-compute@developer.gserviceaccount.com][0m
[0m[1mgoogle_storage_bucket_object.exif_processor_source: Refreshing state... [id=serverless-project-24w-functions-exif_processor.zip][0m
[0m[1mgoogle_storage_bucket_object.metadata_extractor_source: Refreshing state... [id=serverless-project-24w-functions-metadata_extractor.zip][0m
[0m[1mgoogle_storage_bucket_object.format_converter_source: Refreshing state... [id=serverless-project-24w-functions-format_converter.zip][0m
[0m[1mgoogle_storage_bucket_object.thumbnail_generator_source: Refreshing state... [id=serverless-project-24w-functions-thumbnail_generator.zip][0m
[0m[1mgoogle_storage_bucket_object.rgb_channel_separator_source: Refreshing state... [id=serverless-project-24w-functions-rgb_channel_separator.zip][0m
[0m[1mgoogle_storage_bucket_object.input_handler_source: Refreshing state... [id=serverless-project-24w-functions-input_handler.zip][0m
[0m[1mgoogle_cloudfunctions2_function.format_converter: Refreshing state... [id=projects/serverless-project-24w/locations/europe-west1/functions/format-converter][0m
[0m[1mgoogle_cloudfunctions2_function.exif_processor: Refreshing state... [id=projects/serverless-project-24w/locations/europe-west1/functions/exif-processor][0m
[0m[1mgoogle_cloudfunctions2_function.rgb_channel_separator: Refreshing state... [id=projects/serverless-project-24w/locations/europe-west1/functions/rgb-channel-separator][0m
[0m[1mgoogle_cloudfunctions2_function.thumbnail_generator: Refreshing state... [id=projects/serverless-project-24w/locations/europe-west1/functions/thumbnail-generator][0m
[0m[1mgoogle_cloudfunctions2_function.input_handler: Refreshing state... [id=projects/serverless-project-24w/locations/europe-west1/functions/input-handler][0m
[0m[1mgoogle_cloudfunctions2_function.metadata_extractor: Refreshing state... [id=projects/serverless-project-24w/locations/europe-west1/functions/metadata-extractor][0m
[0m[1mgoogle_cloudfunctions2_function_iam_member.invoker: Refreshing state... [id=projects/serverless-project-24w/locations/europe-west1/functions/input-handler/roles/cloudfunctions.invoker/serviceAccount:180156150843-compute@developer.gserviceaccount.com][0m

[1m[36mNote:[0m[1m Objects have changed outside of Terraform
[0m
Terraform detected the following changes made outside of Terraform since the
last "terraform apply" which may have affected this plan:

[1m  # google_cloudfunctions2_function.exif_processor[0m has been deleted
[0m  [31m-[0m[0m resource "google_cloudfunctions2_function" "exif_processor" {
        id           = "projects/serverless-project-24w/locations/europe-west1/functions/exif-processor"
        name         = "exif-processor"
      [31m-[0m[0m url          = "https://europe-west1-serverless-project-24w.cloudfunctions.net/exif-processor" [90m-> null[0m[0m
        [90m# (8 unchanged attributes hidden)[0m[0m

        [90m# (3 unchanged blocks hidden)[0m[0m
    }

[1m  # google_cloudfunctions2_function.format_converter[0m has been deleted
[0m  [31m-[0m[0m resource "google_cloudfunctions2_function" "format_converter" {
        id           = "projects/serverless-project-24w/locations/europe-west1/functions/format-converter"
        name         = "format-converter"
      [31m-[0m[0m url          = "https://europe-west1-serverless-project-24w.cloudfunctions.net/format-converter" [90m-> null[0m[0m
        [90m# (8 unchanged attributes hidden)[0m[0m

        [90m# (3 unchanged blocks hidden)[0m[0m
    }

[1m  # google_cloudfunctions2_function.input_handler[0m has been deleted
[0m  [31m-[0m[0m resource "google_cloudfunctions2_function" "input_handler" {
        id           = "projects/serverless-project-24w/locations/europe-west1/functions/input-handler"
      [31m-[0m[0m location     = "europe-west1" [90m-> null[0m[0m
      [31m-[0m[0m name         = "input-handler" [90m-> null[0m[0m
      [31m-[0m[0m project      = "serverless-project-24w" [90m-> null[0m[0m
      [31m-[0m[0m url          = "https://europe-west1-serverless-project-24w.cloudfunctions.net/input-handler" [90m-> null[0m[0m
        [90m# (6 unchanged attributes hidden)[0m[0m

        [90m# (3 unchanged blocks hidden)[0m[0m
    }

[1m  # google_cloudfunctions2_function.metadata_extractor[0m has been deleted
[0m  [31m-[0m[0m resource "google_cloudfunctions2_function" "metadata_extractor" {
        id           = "projects/serverless-project-24w/locations/europe-west1/functions/metadata-extractor"
        name         = "metadata-extractor"
      [31m-[0m[0m url          = "https://europe-west1-serverless-project-24w.cloudfunctions.net/metadata-extractor" [90m-> null[0m[0m
        [90m# (8 unchanged attributes hidden)[0m[0m

        [90m# (3 unchanged blocks hidden)[0m[0m
    }

[1m  # google_cloudfunctions2_function.rgb_channel_separator[0m has been deleted
[0m  [31m-[0m[0m resource "google_cloudfunctions2_function" "rgb_channel_separator" {
        id           = "projects/serverless-project-24w/locations/europe-west1/functions/rgb-channel-separator"
        name         = "rgb-channel-separator"
      [31m-[0m[0m url          = "https://europe-west1-serverless-project-24w.cloudfunctions.net/rgb-channel-separator" [90m-> null[0m[0m
        [90m# (8 unchanged attributes hidden)[0m[0m

        [90m# (3 unchanged blocks hidden)[0m[0m
    }

[1m  # google_cloudfunctions2_function.thumbnail_generator[0m has been deleted
[0m  [31m-[0m[0m resource "google_cloudfunctions2_function" "thumbnail_generator" {
        id           = "projects/serverless-project-24w/locations/europe-west1/functions/thumbnail-generator"
        name         = "thumbnail-generator"
      [31m-[0m[0m url          = "https://europe-west1-serverless-project-24w.cloudfunctions.net/thumbnail-generator" [90m-> null[0m[0m
        [90m# (8 unchanged attributes hidden)[0m[0m

        [90m# (3 unchanged blocks hidden)[0m[0m
    }

[1m  # google_pubsub_topic.convert_format[0m has been deleted
[0m  [31m-[0m[0m resource "google_pubsub_topic" "convert_format" {
      [31m-[0m[0m id                         = "projects/serverless-project-24w/topics/convert-format" [90m-> null[0m[0m
        name                       = "convert-format"
        [90m# (4 unchanged attributes hidden)[0m[0m
    }

[1m  # google_pubsub_topic.extract_metadata[0m has been deleted
[0m  [31m-[0m[0m resource "google_pubsub_topic" "extract_metadata" {
      [31m-[0m[0m id                         = "projects/serverless-project-24w/topics/extract-metadata" [90m-> null[0m[0m
        name                       = "extract-metadata"
        [90m# (4 unchanged attributes hidden)[0m[0m
    }

[1m  # google_pubsub_topic.generate_thumbnail[0m has been deleted
[0m  [31m-[0m[0m resource "google_pubsub_topic" "generate_thumbnail" {
      [31m-[0m[0m id                         = "projects/serverless-project-24w/topics/generate-thumbnail" [90m-> null[0m[0m
        name                       = "generate-thumbnail"
        [90m# (4 unchanged attributes hidden)[0m[0m
    }

[1m  # google_pubsub_topic.process_exif[0m has been deleted
[0m  [31m-[0m[0m resource "google_pubsub_topic" "process_exif" {
      [31m-[0m[0m id                         = "projects/serverless-project-24w/topics/process-exif" [90m-> null[0m[0m
        name                       = "process-exif"
        [90m# (4 unchanged attributes hidden)[0m[0m
    }

[1m  # google_pubsub_topic.separate_rgb_channels[0m has been deleted
[0m  [31m-[0m[0m resource "google_pubsub_topic" "separate_rgb_channels" {
      [31m-[0m[0m id                         = "projects/serverless-project-24w/topics/separate-rgb-channels" [90m-> null[0m[0m
        name                       = "separate-rgb-channels"
        [90m# (4 unchanged attributes hidden)[0m[0m
    }

[1m  # google_storage_bucket.function_source_bucket[0m has been deleted
[0m  [31m-[0m[0m resource "google_storage_bucket" "function_source_bucket" {
        id                          = "serverless-project-24w-functions"
      [31m-[0m[0m name                        = "serverless-project-24w-functions" [90m-> null[0m[0m
        [90m# (11 unchanged attributes hidden)[0m[0m

        [90m# (1 unchanged block hidden)[0m[0m
    }

[1m  # google_storage_bucket.input_bucket[0m has been deleted
[0m  [31m-[0m[0m resource "google_storage_bucket" "input_bucket" {
        id                          = "serverless-project-24w-input"
      [31m-[0m[0m name                        = "serverless-project-24w-input" [90m-> null[0m[0m
        [90m# (11 unchanged attributes hidden)[0m[0m

        [90m# (1 unchanged block hidden)[0m[0m
    }

[1m  # google_storage_bucket_object.exif_processor_source[0m has been deleted
[0m  [31m-[0m[0m resource "google_storage_bucket_object" "exif_processor_source" {
        id                  = "serverless-project-24w-functions-exif_processor.zip"
      [31m-[0m[0m name                = "exif_processor.zip" [90m-> null[0m[0m
        [90m# (18 unchanged attributes hidden)[0m[0m
    }

[1m  # google_storage_bucket_object.format_converter_source[0m has been deleted
[0m  [31m-[0m[0m resource "google_storage_bucket_object" "format_converter_source" {
        id                  = "serverless-project-24w-functions-format_converter.zip"
      [31m-[0m[0m name                = "format_converter.zip" [90m-> null[0m[0m
        [90m# (18 unchanged attributes hidden)[0m[0m
    }

[1m  # google_storage_bucket_object.input_handler_source[0m has been deleted
[0m  [31m-[0m[0m resource "google_storage_bucket_object" "input_handler_source" {
        id                  = "serverless-project-24w-functions-input_handler.zip"
      [31m-[0m[0m name                = "input_handler.zip" [90m-> null[0m[0m
        [90m# (18 unchanged attributes hidden)[0m[0m
    }

[1m  # google_storage_bucket_object.metadata_extractor_source[0m has been deleted
[0m  [31m-[0m[0m resource "google_storage_bucket_object" "metadata_extractor_source" {
        id                  = "serverless-project-24w-functions-metadata_extractor.zip"
      [31m-[0m[0m name                = "metadata_extractor.zip" [90m-> null[0m[0m
        [90m# (18 unchanged attributes hidden)[0m[0m
    }

[1m  # google_storage_bucket_object.rgb_channel_separator_source[0m has been deleted
[0m  [31m-[0m[0m resource "google_storage_bucket_object" "rgb_channel_separator_source" {
        id                  = "serverless-project-24w-functions-rgb_channel_separator.zip"
      [31m-[0m[0m name                = "rgb_channel_separator.zip" [90m-> null[0m[0m
        [90m# (18 unchanged attributes hidden)[0m[0m
    }

[1m  # google_storage_bucket_object.thumbnail_generator_source[0m has been deleted
[0m  [31m-[0m[0m resource "google_storage_bucket_object" "thumbnail_generator_source" {
        id                  = "serverless-project-24w-functions-thumbnail_generator.zip"
      [31m-[0m[0m name                = "thumbnail_generator.zip" [90m-> null[0m[0m
        [90m# (18 unchanged attributes hidden)[0m[0m
    }


Unless you have made equivalent changes to your configuration, or ignored the
relevant attributes using ignore_changes, the following plan may include
actions to undo or respond to these changes.
[90m
─────────────────────────────────────────────────────────────────────────────[0m

Terraform used the selected providers to generate the following execution
plan. Resource actions are indicated with the following symbols:
  [32m+[0m create[0m

Terraform will perform the following actions:

[1m  # google_cloudfunctions2_function.exif_processor[0m will be created
[0m  [32m+[0m[0m resource "google_cloudfunctions2_function" "exif_processor" {
      [32m+[0m[0m environment = (known after apply)
      [32m+[0m[0m id          = (known after apply)
      [32m+[0m[0m location    = "europe-west1"
      [32m+[0m[0m name        = "exif-processor"
      [32m+[0m[0m project     = (known after apply)
      [32m+[0m[0m state       = (known after apply)
      [32m+[0m[0m update_time = (known after apply)
      [32m+[0m[0m url         = (known after apply)

      [32m+[0m[0m build_config {
          [32m+[0m[0m build                 = (known after apply)
          [32m+[0m[0m entry_point           = "process_exif"
          [32m+[0m[0m environment_variables = (known after apply)
          [32m+[0m[0m runtime               = "python312"

          [32m+[0m[0m source {
              [32m+[0m[0m storage_source {
                  [32m+[0m[0m bucket     = "serverless-project-24w-functions"
                  [32m+[0m[0m generation = (known after apply)
                  [32m+[0m[0m object     = "exif_processor.zip"
                }
            }
        }

      [32m+[0m[0m event_trigger {
          [32m+[0m[0m event_type            = "google.cloud.pubsub.topic.v1.messagePublished"
          [32m+[0m[0m pubsub_topic          = (known after apply)
          [32m+[0m[0m retry_policy          = "RETRY_POLICY_RETRY"
          [32m+[0m[0m service_account_email = (known after apply)
          [32m+[0m[0m trigger               = (known after apply)
          [32m+[0m[0m trigger_region        = "europe-west1"
        }

      [32m+[0m[0m service_config {
          [32m+[0m[0m all_traffic_on_latest_revision   = true
          [32m+[0m[0m available_cpu                    = (known after apply)
          [32m+[0m[0m available_memory                 = "128Mi"
          [32m+[0m[0m gcf_uri                          = (known after apply)
          [32m+[0m[0m ingress_settings                 = "ALLOW_ALL"
          [32m+[0m[0m max_instance_count               = 100
          [32m+[0m[0m max_instance_request_concurrency = (known after apply)
          [32m+[0m[0m min_instance_count               = 1
          [32m+[0m[0m service                          = (known after apply)
          [32m+[0m[0m service_account_email            = (known after apply)
          [32m+[0m[0m timeout_seconds                  = 60
          [32m+[0m[0m uri                              = (known after apply)
        }
    }

[1m  # google_cloudfunctions2_function.format_converter[0m will be created
[0m  [32m+[0m[0m resource "google_cloudfunctions2_function" "format_converter" {
      [32m+[0m[0m environment = (known after apply)
      [32m+[0m[0m id          = (known after apply)
      [32m+[0m[0m location    = "europe-west1"
      [32m+[0m[0m name        = "format-converter"
      [32m+[0m[0m project     = (known after apply)
      [32m+[0m[0m state       = (known after apply)
      [32m+[0m[0m update_time = (known after apply)
      [32m+[0m[0m url         = (known after apply)

      [32m+[0m[0m build_config {
          [32m+[0m[0m build                 = (known after apply)
          [32m+[0m[0m entry_point           = "convert_format"
          [32m+[0m[0m environment_variables = (known after apply)
          [32m+[0m[0m runtime               = "python312"

          [32m+[0m[0m source {
              [32m+[0m[0m storage_source {
                  [32m+[0m[0m bucket     = "serverless-project-24w-functions"
                  [32m+[0m[0m generation = (known after apply)
                  [32m+[0m[0m object     = "format_converter.zip"
                }
            }
        }

      [32m+[0m[0m event_trigger {
          [32m+[0m[0m event_type            = "google.cloud.pubsub.topic.v1.messagePublished"
          [32m+[0m[0m pubsub_topic          = (known after apply)
          [32m+[0m[0m retry_policy          = "RETRY_POLICY_RETRY"
          [32m+[0m[0m service_account_email = (known after apply)
          [32m+[0m[0m trigger               = (known after apply)
          [32m+[0m[0m trigger_region        = "europe-west1"
        }

      [32m+[0m[0m service_config {
          [32m+[0m[0m all_traffic_on_latest_revision   = true
          [32m+[0m[0m available_cpu                    = (known after apply)
          [32m+[0m[0m available_memory                 = "128Mi"
          [32m+[0m[0m gcf_uri                          = (known after apply)
          [32m+[0m[0m ingress_settings                 = "ALLOW_ALL"
          [32m+[0m[0m max_instance_count               = 100
          [32m+[0m[0m max_instance_request_concurrency = (known after apply)
          [32m+[0m[0m min_instance_count               = 1
          [32m+[0m[0m service                          = (known after apply)
          [32m+[0m[0m service_account_email            = (known after apply)
          [32m+[0m[0m timeout_seconds                  = 60
          [32m+[0m[0m uri                              = (known after apply)
        }
    }

[1m  # google_cloudfunctions2_function.input_handler[0m will be created
[0m  [32m+[0m[0m resource "google_cloudfunctions2_function" "input_handler" {
      [32m+[0m[0m environment = (known after apply)
      [32m+[0m[0m id          = (known after apply)
      [32m+[0m[0m location    = "europe-west1"
      [32m+[0m[0m name        = "input-handler"
      [32m+[0m[0m project     = (known after apply)
      [32m+[0m[0m state       = (known after apply)
      [32m+[0m[0m update_time = (known after apply)
      [32m+[0m[0m url         = (known after apply)

      [32m+[0m[0m build_config {
          [32m+[0m[0m build                 = (known after apply)
          [32m+[0m[0m entry_point           = "handle_upload"
          [32m+[0m[0m environment_variables = (known after apply)
          [32m+[0m[0m runtime               = "python312"

          [32m+[0m[0m source {
              [32m+[0m[0m storage_source {
                  [32m+[0m[0m bucket     = "serverless-project-24w-functions"
                  [32m+[0m[0m generation = (known after apply)
                  [32m+[0m[0m object     = "input_handler.zip"
                }
            }
        }

      [32m+[0m[0m event_trigger {
          [32m+[0m[0m event_type            = "google.cloud.storage.object.v1.finalized"
          [32m+[0m[0m pubsub_topic          = (known after apply)
          [32m+[0m[0m service_account_email = (known after apply)
          [32m+[0m[0m trigger               = (known after apply)
          [32m+[0m[0m trigger_region        = "europe-west1"

          [32m+[0m[0m event_filters {
              [32m+[0m[0m attribute = "bucket"
              [32m+[0m[0m value     = "serverless-project-24w-input"
                [90m# (1 unchanged attribute hidden)[0m[0m
            }
        }

      [32m+[0m[0m service_config {
          [32m+[0m[0m all_traffic_on_latest_revision   = true
          [32m+[0m[0m available_cpu                    = (known after apply)
          [32m+[0m[0m available_memory                 = "128Mi"
          [32m+[0m[0m gcf_uri                          = (known after apply)
          [32m+[0m[0m ingress_settings                 = "ALLOW_ALL"
          [32m+[0m[0m max_instance_count               = 100
          [32m+[0m[0m max_instance_request_concurrency = (known after apply)
          [32m+[0m[0m min_instance_count               = 1
          [32m+[0m[0m service                          = (known after apply)
          [32m+[0m[0m service_account_email            = (known after apply)
          [32m+[0m[0m timeout_seconds                  = 60
          [32m+[0m[0m uri                              = (known after apply)
        }
    }

[1m  # google_cloudfunctions2_function.metadata_extractor[0m will be created
[0m  [32m+[0m[0m resource "google_cloudfunctions2_function" "metadata_extractor" {
      [32m+[0m[0m environment = (known after apply)
      [32m+[0m[0m id          = (known after apply)
      [32m+[0m[0m location    = "europe-west1"
      [32m+[0m[0m name        = "metadata-extractor"
      [32m+[0m[0m project     = (known after apply)
      [32m+[0m[0m state       = (known after apply)
      [32m+[0m[0m update_time = (known after apply)
      [32m+[0m[0m url         = (known after apply)

      [32m+[0m[0m build_config {
          [32m+[0m[0m build                 = (known after apply)
          [32m+[0m[0m entry_point           = "extract_metadata"
          [32m+[0m[0m environment_variables = (known after apply)
          [32m+[0m[0m runtime               = "python312"

          [32m+[0m[0m source {
              [32m+[0m[0m storage_source {
                  [32m+[0m[0m bucket     = "serverless-project-24w-functions"
                  [32m+[0m[0m generation = (known after apply)
                  [32m+[0m[0m object     = "metadata_extractor.zip"
                }
            }
        }

      [32m+[0m[0m event_trigger {
          [32m+[0m[0m event_type            = "google.cloud.pubsub.topic.v1.messagePublished"
          [32m+[0m[0m pubsub_topic          = (known after apply)
          [32m+[0m[0m retry_policy          = "RETRY_POLICY_RETRY"
          [32m+[0m[0m service_account_email = (known after apply)
          [32m+[0m[0m trigger               = (known after apply)
          [32m+[0m[0m trigger_region        = "europe-west1"
        }

      [32m+[0m[0m service_config {
          [32m+[0m[0m all_traffic_on_latest_revision   = true
          [32m+[0m[0m available_cpu                    = (known after apply)
          [32m+[0m[0m available_memory                 = "128Mi"
          [32m+[0m[0m gcf_uri                          = (known after apply)
          [32m+[0m[0m ingress_settings                 = "ALLOW_ALL"
          [32m+[0m[0m max_instance_count               = 100
          [32m+[0m[0m max_instance_request_concurrency = (known after apply)
          [32m+[0m[0m min_instance_count               = 1
          [32m+[0m[0m service                          = (known after apply)
          [32m+[0m[0m service_account_email            = (known after apply)
          [32m+[0m[0m timeout_seconds                  = 60
          [32m+[0m[0m uri                              = (known after apply)
        }
    }

[1m  # google_cloudfunctions2_function.rgb_channel_separator[0m will be created
[0m  [32m+[0m[0m resource "google_cloudfunctions2_function" "rgb_channel_separator" {
      [32m+[0m[0m environment = (known after apply)
      [32m+[0m[0m id          = (known after apply)
      [32m+[0m[0m location    = "europe-west1"
      [32m+[0m[0m name        = "rgb-channel-separator"
      [32m+[0m[0m project     = (known after apply)
      [32m+[0m[0m state       = (known after apply)
      [32m+[0m[0m update_time = (known after apply)
      [32m+[0m[0m url         = (known after apply)

      [32m+[0m[0m build_config {
          [32m+[0m[0m build                 = (known after apply)
          [32m+[0m[0m entry_point           = "separate_rgb_channels"
          [32m+[0m[0m environment_variables = (known after apply)
          [32m+[0m[0m runtime               = "python311"

          [32m+[0m[0m source {
              [32m+[0m[0m storage_source {
                  [32m+[0m[0m bucket     = "serverless-project-24w-functions"
                  [32m+[0m[0m generation = (known after apply)
                  [32m+[0m[0m object     = "rgb_channel_separator.zip"
                }
            }
        }

      [32m+[0m[0m event_trigger {
          [32m+[0m[0m event_type            = "google.cloud.pubsub.topic.v1.messagePublished"
          [32m+[0m[0m pubsub_topic          = (known after apply)
          [32m+[0m[0m retry_policy          = "RETRY_POLICY_RETRY"
          [32m+[0m[0m service_account_email = (known after apply)
          [32m+[0m[0m trigger               = (known after apply)
          [32m+[0m[0m trigger_region        = "europe-west1"
        }

      [32m+[0m[0m service_config {
          [32m+[0m[0m all_traffic_on_latest_revision   = true
          [32m+[0m[0m available_cpu                    = (known after apply)
          [32m+[0m[0m available_memory                 = "128Mi"
          [32m+[0m[0m gcf_uri                          = (known after apply)
          [32m+[0m[0m ingress_settings                 = "ALLOW_ALL"
          [32m+[0m[0m max_instance_count               = 100
          [32m+[0m[0m max_instance_request_concurrency = (known after apply)
          [32m+[0m[0m min_instance_count               = 1
          [32m+[0m[0m service                          = (known after apply)
          [32m+[0m[0m service_account_email            = (known after apply)
          [32m+[0m[0m timeout_seconds                  = 60
          [32m+[0m[0m uri                              = (known after apply)
        }
    }

[1m  # google_cloudfunctions2_function.thumbnail_generator[0m will be created
[0m  [32m+[0m[0m resource "google_cloudfunctions2_function" "thumbnail_generator" {
      [32m+[0m[0m environment = (known after apply)
      [32m+[0m[0m id          = (known after apply)
      [32m+[0m[0m location    = "europe-west1"
      [32m+[0m[0m name        = "thumbnail-generator"
      [32m+[0m[0m project     = (known after apply)
      [32m+[0m[0m state       = (known after apply)
      [32m+[0m[0m update_time = (known after apply)
      [32m+[0m[0m url         = (known after apply)

      [32m+[0m[0m build_config {
          [32m+[0m[0m build                 = (known after apply)
          [32m+[0m[0m entry_point           = "generate_thumbnail"
          [32m+[0m[0m environment_variables = (known after apply)
          [32m+[0m[0m runtime               = "python312"

          [32m+[0m[0m source {
              [32m+[0m[0m storage_source {
                  [32m+[0m[0m bucket     = "serverless-project-24w-functions"
                  [32m+[0m[0m generation = (known after apply)
                  [32m+[0m[0m object     = "thumbnail_generator.zip"
                }
            }
        }

      [32m+[0m[0m event_trigger {
          [32m+[0m[0m event_type            = "google.cloud.pubsub.topic.v1.messagePublished"
          [32m+[0m[0m pubsub_topic          = (known after apply)
          [32m+[0m[0m retry_policy          = "RETRY_POLICY_RETRY"
          [32m+[0m[0m service_account_email = (known after apply)
          [32m+[0m[0m trigger               = (known after apply)
          [32m+[0m[0m trigger_region        = "europe-west1"
        }

      [32m+[0m[0m service_config {
          [32m+[0m[0m all_traffic_on_latest_revision   = true
          [32m+[0m[0m available_cpu                    = (known after apply)
          [32m+[0m[0m available_memory                 = "128Mi"
          [32m+[0m[0m gcf_uri                          = (known after apply)
          [32m+[0m[0m ingress_settings                 = "ALLOW_ALL"
          [32m+[0m[0m max_instance_count               = 100
          [32m+[0m[0m max_instance_request_concurrency = (known after apply)
          [32m+[0m[0m min_instance_count               = 1
          [32m+[0m[0m service                          = (known after apply)
          [32m+[0m[0m service_account_email            = (known after apply)
          [32m+[0m[0m timeout_seconds                  = 60
          [32m+[0m[0m uri                              = (known after apply)
        }
    }

[1m  # google_cloudfunctions2_function_iam_member.invoker[0m will be created
[0m  [32m+[0m[0m resource "google_cloudfunctions2_function_iam_member" "invoker" {
      [32m+[0m[0m cloud_function = "input-handler"
      [32m+[0m[0m etag           = (known after apply)
      [32m+[0m[0m id             = (known after apply)
      [32m+[0m[0m location       = "europe-west1"
      [32m+[0m[0m member         = "serviceAccount:180156150843-compute@developer.gserviceaccount.com"
      [32m+[0m[0m project        = (known after apply)
      [32m+[0m[0m role           = "roles/cloudfunctions.invoker"
    }

[1m  # google_pubsub_topic.convert_format[0m will be created
[0m  [32m+[0m[0m resource "google_pubsub_topic" "convert_format" {
      [32m+[0m[0m id      = (known after apply)
      [32m+[0m[0m name    = "convert-format"
      [32m+[0m[0m project = (known after apply)

      [32m+[0m[0m message_storage_policy (known after apply)

      [32m+[0m[0m schema_settings (known after apply)
    }

[1m  # google_pubsub_topic.extract_metadata[0m will be created
[0m  [32m+[0m[0m resource "google_pubsub_topic" "extract_metadata" {
      [32m+[0m[0m id      = (known after apply)
      [32m+[0m[0m name    = "extract-metadata"
      [32m+[0m[0m project = (known after apply)

      [32m+[0m[0m message_storage_policy (known after apply)

      [32m+[0m[0m schema_settings (known after apply)
    }

[1m  # google_pubsub_topic.generate_thumbnail[0m will be created
[0m  [32m+[0m[0m resource "google_pubsub_topic" "generate_thumbnail" {
      [32m+[0m[0m id      = (known after apply)
      [32m+[0m[0m name    = "generate-thumbnail"
      [32m+[0m[0m project = (known after apply)

      [32m+[0m[0m message_storage_policy (known after apply)

      [32m+[0m[0m schema_settings (known after apply)
    }

[1m  # google_pubsub_topic.input_bucket[0m will be created
[0m  [32m+[0m[0m resource "google_pubsub_topic" "input_bucket" {
      [32m+[0m[0m id      = (known after apply)
      [32m+[0m[0m name    = "input-bucket"
      [32m+[0m[0m project = (known after apply)

      [32m+[0m[0m message_storage_policy (known after apply)

      [32m+[0m[0m schema_settings (known after apply)
    }

[1m  # google_pubsub_topic.process_exif[0m will be created
[0m  [32m+[0m[0m resource "google_pubsub_topic" "process_exif" {
      [32m+[0m[0m id      = (known after apply)
      [32m+[0m[0m name    = "process-exif"
      [32m+[0m[0m project = (known after apply)

      [32m+[0m[0m message_storage_policy (known after apply)

      [32m+[0m[0m schema_settings (known after apply)
    }

[1m  # google_pubsub_topic.separate_rgb_channels[0m will be created
[0m  [32m+[0m[0m resource "google_pubsub_topic" "separate_rgb_channels" {
      [32m+[0m[0m id      = (known after apply)
      [32m+[0m[0m name    = "separate-rgb-channels"
      [32m+[0m[0m project = (known after apply)

      [32m+[0m[0m message_storage_policy (known after apply)

      [32m+[0m[0m schema_settings (known after apply)
    }

[1m  # google_storage_bucket.function_source_bucket[0m will be created
[0m  [32m+[0m[0m resource "google_storage_bucket" "function_source_bucket" {
      [32m+[0m[0m force_destroy               = false
      [32m+[0m[0m id                          = (known after apply)
      [32m+[0m[0m labels                      = (known after apply)
      [32m+[0m[0m location                    = "EUROPE-WEST1"
      [32m+[0m[0m name                        = "serverless-project-24w-functions"
      [32m+[0m[0m project                     = (known after apply)
      [32m+[0m[0m public_access_prevention    = (known after apply)
      [32m+[0m[0m self_link                   = (known after apply)
      [32m+[0m[0m storage_class               = "STANDARD"
      [32m+[0m[0m uniform_bucket_level_access = true
      [32m+[0m[0m url                         = (known after apply)

      [32m+[0m[0m soft_delete_policy (known after apply)

      [32m+[0m[0m versioning (known after apply)

      [32m+[0m[0m website (known after apply)
    }

[1m  # google_storage_bucket.input_bucket[0m will be created
[0m  [32m+[0m[0m resource "google_storage_bucket" "input_bucket" {
      [32m+[0m[0m force_destroy               = false
      [32m+[0m[0m id                          = (known after apply)
      [32m+[0m[0m labels                      = (known after apply)
      [32m+[0m[0m location                    = "EUROPE-WEST1"
      [32m+[0m[0m name                        = "serverless-project-24w-input"
      [32m+[0m[0m project                     = (known after apply)
      [32m+[0m[0m public_access_prevention    = (known after apply)
      [32m+[0m[0m self_link                   = (known after apply)
      [32m+[0m[0m storage_class               = "STANDARD"
      [32m+[0m[0m uniform_bucket_level_access = true
      [32m+[0m[0m url                         = (known after apply)

      [32m+[0m[0m soft_delete_policy (known after apply)

      [32m+[0m[0m versioning (known after apply)

      [32m+[0m[0m website (known after apply)
    }

[1m  # google_storage_bucket.output_bucket[0m will be created
[0m  [32m+[0m[0m resource "google_storage_bucket" "output_bucket" {
      [32m+[0m[0m force_destroy               = false
      [32m+[0m[0m id                          = (known after apply)
      [32m+[0m[0m labels                      = (known after apply)
      [32m+[0m[0m location                    = "EUROPE-WEST1"
      [32m+[0m[0m name                        = "serverless-project-24w-output"
      [32m+[0m[0m project                     = (known after apply)
      [32m+[0m[0m public_access_prevention    = (known after apply)
      [32m+[0m[0m self_link                   = (known after apply)
      [32m+[0m[0m storage_class               = "STANDARD"
      [32m+[0m[0m uniform_bucket_level_access = true
      [32m+[0m[0m url                         = (known after apply)

      [32m+[0m[0m soft_delete_policy (known after apply)

      [32m+[0m[0m versioning (known after apply)

      [32m+[0m[0m website (known after apply)
    }

[1m  # google_storage_bucket_object.exif_processor_source[0m will be created
[0m  [32m+[0m[0m resource "google_storage_bucket_object" "exif_processor_source" {
      [32m+[0m[0m bucket         = "serverless-project-24w-functions"
      [32m+[0m[0m content        = (sensitive value)
      [32m+[0m[0m content_type   = (known after apply)
      [32m+[0m[0m crc32c         = (known after apply)
      [32m+[0m[0m detect_md5hash = "different hash"
      [32m+[0m[0m id             = (known after apply)
      [32m+[0m[0m kms_key_name   = (known after apply)
      [32m+[0m[0m md5hash        = (known after apply)
      [32m+[0m[0m media_link     = (known after apply)
      [32m+[0m[0m name           = "exif_processor.zip"
      [32m+[0m[0m output_name    = (known after apply)
      [32m+[0m[0m self_link      = (known after apply)
      [32m+[0m[0m source         = "./zipped/exif_processor.zip"
      [32m+[0m[0m storage_class  = (known after apply)
    }

[1m  # google_storage_bucket_object.format_converter_source[0m will be created
[0m  [32m+[0m[0m resource "google_storage_bucket_object" "format_converter_source" {
      [32m+[0m[0m bucket         = "serverless-project-24w-functions"
      [32m+[0m[0m content        = (sensitive value)
      [32m+[0m[0m content_type   = (known after apply)
      [32m+[0m[0m crc32c         = (known after apply)
      [32m+[0m[0m detect_md5hash = "different hash"
      [32m+[0m[0m id             = (known after apply)
      [32m+[0m[0m kms_key_name   = (known after apply)
      [32m+[0m[0m md5hash        = (known after apply)
      [32m+[0m[0m media_link     = (known after apply)
      [32m+[0m[0m name           = "format_converter.zip"
      [32m+[0m[0m output_name    = (known after apply)
      [32m+[0m[0m self_link      = (known after apply)
      [32m+[0m[0m source         = "./zipped/format_converter.zip"
      [32m+[0m[0m storage_class  = (known after apply)
    }

[1m  # google_storage_bucket_object.input_handler_source[0m will be created
[0m  [32m+[0m[0m resource "google_storage_bucket_object" "input_handler_source" {
      [32m+[0m[0m bucket         = "serverless-project-24w-functions"
      [32m+[0m[0m content        = (sensitive value)
      [32m+[0m[0m content_type   = (known after apply)
      [32m+[0m[0m crc32c         = (known after apply)
      [32m+[0m[0m detect_md5hash = "different hash"
      [32m+[0m[0m id             = (known after apply)
      [32m+[0m[0m kms_key_name   = (known after apply)
      [32m+[0m[0m md5hash        = (known after apply)
      [32m+[0m[0m media_link     = (known after apply)
      [32m+[0m[0m name           = "input_handler.zip"
      [32m+[0m[0m output_name    = (known after apply)
      [32m+[0m[0m self_link      = (known after apply)
      [32m+[0m[0m source         = "./zipped/input_handler.zip"
      [32m+[0m[0m storage_class  = (known after apply)
    }

[1m  # google_storage_bucket_object.metadata_extractor_source[0m will be created
[0m  [32m+[0m[0m resource "google_storage_bucket_object" "metadata_extractor_source" {
      [32m+[0m[0m bucket         = "serverless-project-24w-functions"
      [32m+[0m[0m content        = (sensitive value)
      [32m+[0m[0m content_type   = (known after apply)
      [32m+[0m[0m crc32c         = (known after apply)
      [32m+[0m[0m detect_md5hash = "different hash"
      [32m+[0m[0m id             = (known after apply)
      [32m+[0m[0m kms_key_name   = (known after apply)
      [32m+[0m[0m md5hash        = (known after apply)
      [32m+[0m[0m media_link     = (known after apply)
      [32m+[0m[0m name           = "metadata_extractor.zip"
      [32m+[0m[0m output_name    = (known after apply)
      [32m+[0m[0m self_link      = (known after apply)
      [32m+[0m[0m source         = "./zipped/metadata_extractor.zip"
      [32m+[0m[0m storage_class  = (known after apply)
    }

[1m  # google_storage_bucket_object.rgb_channel_separator_source[0m will be created
[0m  [32m+[0m[0m resource "google_storage_bucket_object" "rgb_channel_separator_source" {
      [32m+[0m[0m bucket         = "serverless-project-24w-functions"
      [32m+[0m[0m content        = (sensitive value)
      [32m+[0m[0m content_type   = (known after apply)
      [32m+[0m[0m crc32c         = (known after apply)
      [32m+[0m[0m detect_md5hash = "different hash"
      [32m+[0m[0m id             = (known after apply)
      [32m+[0m[0m kms_key_name   = (known after apply)
      [32m+[0m[0m md5hash        = (known after apply)
      [32m+[0m[0m media_link     = (known after apply)
      [32m+[0m[0m name           = "rgb_channel_separator.zip"
      [32m+[0m[0m output_name    = (known after apply)
      [32m+[0m[0m self_link      = (known after apply)
      [32m+[0m[0m source         = "./zipped/rgb_channel_separator.zip"
      [32m+[0m[0m storage_class  = (known after apply)
    }

[1m  # google_storage_bucket_object.thumbnail_generator_source[0m will be created
[0m  [32m+[0m[0m resource "google_storage_bucket_object" "thumbnail_generator_source" {
      [32m+[0m[0m bucket         = "serverless-project-24w-functions"
      [32m+[0m[0m content        = (sensitive value)
      [32m+[0m[0m content_type   = (known after apply)
      [32m+[0m[0m crc32c         = (known after apply)
      [32m+[0m[0m detect_md5hash = "different hash"
      [32m+[0m[0m id             = (known after apply)
      [32m+[0m[0m kms_key_name   = (known after apply)
      [32m+[0m[0m md5hash        = (known after apply)
      [32m+[0m[0m media_link     = (known after apply)
      [32m+[0m[0m name           = "thumbnail_generator.zip"
      [32m+[0m[0m output_name    = (known after apply)
      [32m+[0m[0m self_link      = (known after apply)
      [32m+[0m[0m source         = "./zipped/thumbnail_generator.zip"
      [32m+[0m[0m storage_class  = (known after apply)
    }

[1mPlan:[0m 22 to add, 0 to change, 0 to destroy.
[0m
Changes to Outputs:
  [33m~[0m[0m function_urls      = {
      [33m~[0m[0m exif_processor        = "https://europe-west1-serverless-project-24w.cloudfunctions.net/exif-processor" -> (known after apply)
      [33m~[0m[0m format_converter      = "https://europe-west1-serverless-project-24w.cloudfunctions.net/format-converter" -> (known after apply)
      [33m~[0m[0m input_handler         = "https://europe-west1-serverless-project-24w.cloudfunctions.net/input-handler" -> (known after apply)
      [33m~[0m[0m metadata_extractor    = "https://europe-west1-serverless-project-24w.cloudfunctions.net/metadata-extractor" -> (known after apply)
      [33m~[0m[0m rgb_channel_separator = "https://europe-west1-serverless-project-24w.cloudfunctions.net/rgb-channel-separator" -> (known after apply)
      [33m~[0m[0m thumbnail_generator   = "https://europe-west1-serverless-project-24w.cloudfunctions.net/thumbnail-generator" -> (known after apply)
    }
[90m
─────────────────────────────────────────────────────────────────────────────[0m

Saved the plan to: low.tfplan

To perform exactly these actions, run the following command to apply:
    terraform apply "low.tfplan"
